<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Global Superstore)' inline='true' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Orysya\Desktop\Dashboards_and_Data_Visualization_for_Data_Analysis\Tableau_Data_Files\Global Superstore.xls' interpretationMode='0' password='' server='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Market]' />
              <expression op='[Returns].[Market]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='City' ordinal='8' />
                <column datatype='string' name='State' ordinal='9' />
                <column datatype='string' name='Country' ordinal='10' />
                <column datatype='string' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Market' ordinal='12' />
                <column datatype='string' name='Region' ordinal='13' />
                <column datatype='string' name='Product ID' ordinal='14' />
                <column datatype='string' name='Category' ordinal='15' />
                <column datatype='string' name='Sub-Category' ordinal='16' />
                <column datatype='string' name='Product Name' ordinal='17' />
                <column datatype='real' name='Sales' ordinal='18' />
                <column datatype='integer' name='Quantity' ordinal='19' />
                <column datatype='real' name='Discount' ordinal='20' />
                <column datatype='real' name='Profit' ordinal='21' />
                <column datatype='real' name='Shipping Cost' ordinal='22' />
                <column datatype='string' name='Order Priority' ordinal='23' />
              </columns>
            </relation>
            <relation name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='2'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market (Returns)]' value='[Returns].[Market]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X51291:no:A1:X51291:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B14:no:A1:B14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1174:no:A1:C1174:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]'>
          <bin value='&quot;Envelopes&quot;'>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Envelopes&quot;' value='Small Office Supplies' />
        </aliases>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <drill-paths>
        <drill-path name='Products'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.740498' measure-ordering='alphabetic' measure-percentage='0.259502' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='15_group(sub-category)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]' direction='DESC' using='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</rows>
        <cols>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='16_hierarchy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk] / ([excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk] / [excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Product Name:nk]))</rows>
        <cols>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='17_Work_with_aggregates'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#26794a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Profit:qk]</rows>
        <cols>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='18_exclude_function'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</rows>
        <cols>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='18_keep_function'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</rows>
        <cols>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='19_filter_using_FilterShelf'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]' />
              <size column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Shipping Cost:qk]' />
              <lod column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Product Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Profit:qk]</rows>
        <cols>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='20_QuickFilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Caribbean&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southeast Asia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</column>
            <column>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</rows>
        <cols>([excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk] / [excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='21_Customize_and_Edit_Title_Quick_Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Global Superstore)' name='excel-direct.071i8lg13wh2ua132dif80d2m0r5' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.071i8lg13wh2ua132dif80d2m0r5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:Sub-Category:nk]' to='&quot;Tables&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Profit:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#a5273f</color>
                <color>#ae4b5d</color>
                <color>#b7717f</color>
                <color>#c09ca3</color>
                <color>#cacaca</color>
                <color>#a2c18f</color>
                <color>#69a761</color>
                <color>#2f8e41</color>
                <color>#1e7735</color>
                <color>#09622a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]' value='Select a Sub-Category'>
              <formatted-text>
                <run>Select a Sub-Category</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Order Priority:nk] / ([excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk] / [excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]))</rows>
        <cols>([excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Market:nk] * [excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='32'>
    <window class='worksheet' name='15_group(sub-category)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='16_hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='17_Work_with_aggregates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='18_exclude_function'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='18_keep_function'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
                  <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tables&quot;</value>
                <value>139587016.66441083</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
                  <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chairs&quot;</value>
                <value>306630063.25888747</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='19_filter_using_FilterShelf'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Shipping Cost:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Product Name:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='20_QuickFilter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]' type='filter' />
            <card param='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='21_Customize_and_Edit_Title_Quick_Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]' show-apply='true' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Category:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Market:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Order Priority:nk]</field>
            <field>[excel-direct.071i8lg13wh2ua132dif80d2m0r5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='15_group(sub-category)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='16_hierarchy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='17_Work_with_aggregates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='18_exclude_function' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='18_keep_function' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='19_filter_using_FilterShelf' width='192'>
      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
      gwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='20_QuickFilter' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='21_Customize_and_Edit_Title_Quick_Filter' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
